{"version":3,"sources":["webpack://stream-gt/./src/scripts/selector.js","webpack://stream-gt/./src/scripts/settings.js","webpack://stream-gt/./src/scripts/utils.js","webpack://stream-gt/webpack/bootstrap","webpack://stream-gt/webpack/runtime/define property getters","webpack://stream-gt/webpack/runtime/hasOwnProperty shorthand","webpack://stream-gt/webpack/runtime/make namespace object","webpack://stream-gt/./src/scripts/stream-gt.js"],"names":["StreamGTCharacterSelector","FormApplication","options","super","this","actors","setupActorList","getList","bind","setList","mergeObject","defaultOptions","id","moduleName","title","game","i18n","localize","template","classes","closeOnSubmit","resizable","data","getData","html","activateListeners","find","on","close","checkedList","forEach","actor","hasPlayerOwner","push","name","checked","includes","_e","prop","settings","get","set","Settings","register","hint","scope","config","type","Boolean","default","String","choices","Array","registerMenu","label","restricted","findTokenById","tokenId","canvas","tokens","ownedTokens","t","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","obj","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Hooks","async","getTemplate","$","append","renderHolder"],"mappings":"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","file":"stream-gt.js","sourcesContent":["import { moduleName } from \"./utils\";\n\nexport class StreamGTCharacterSelector extends FormApplication {\n    constructor(options = {}) {\n        super(options);\n\n        this.actors = this.setupActorList();\n        this.getList = this.getList.bind(this);\n        this.setList = this.setList.bind(this);\n    }\n\n    static get defaultOptions() {\n        return mergeObject(super.defaultOptions, {\n            id: moduleName + \"-chooser\",\n            title: game.i18n.localize(moduleName + \".windows.CharacterSelector.title\"),\n            template: \"modules/stream-gt/templates/charchooser.html\",\n            classes: [\"sheet\"],\n            closeOnSubmit: true,\n            resizable: true,\n        });\n    }\n\n    getData(options) {\n        const data = super.getData(options);\n\n        data.actors = this.actors;\n\n        return data;\n    }\n\n    /**\n     * @param  {JQuery} html\n     */\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        html.find(\".cancelButton\").on(\"click\", () => this.close());\n    }\n\n    setupActorList() {\n        /** @type {[{name: String, id: String, checked: Boolean}]} */\n        let actors = [];\n        /** @type {String[]} */\n        const checkedList = this.getList();\n\n        game.actors.forEach(\n            /** @param  {Actor} actor */\n            (actor) => {\n                if (actor.hasPlayerOwner) {\n                    actors.push({\n                        name: actor.name,\n                        id: actor.id,\n                        checked: checkedList.includes(actor.id),\n                    });\n                }\n            }\n        );\n\n        return actors;\n    }\n\n    _updateObject(_e, data) {\n        let checkedList = [];\n        for (let prop in data) {\n            if (data[prop]) {\n                checkedList.push(prop);\n            }\n        }\n        this.setList(checkedList);\n    }\n\n    // gets setting and sets current value to it\n    /** @return {String[]} */\n    getList() {\n        return game.settings.get(moduleName, \"checkedList\")?.[0];\n    }\n\n    // sets setting to current value\n    setList(checkedList) {\n        game.settings.set(moduleName, \"checkedList\", checkedList);\n    }\n}","import { StreamGTCharacterSelector } from './selector';\nimport { moduleName } from './utils.js';\n\nexport class Settings {\n    static setup() {\n        game.settings.register(moduleName, \"enableOverlay\", {\n            name: moduleName + \".settings.enableOverlay.name\",\n            hint: moduleName + \".settings.enableOverlay.hint\",\n            scope: \"client\",\n            config: true,\n            type: Boolean,\n            default: false,\n        });\n\n        game.settings.register(moduleName, \"overlayOrientation\", {\n            name: moduleName + \".settings.overlayOrientation.name\",\n            scope: \"client\",\n            config: true,\n            type: String,\n            choices: {\n                \"horizontal\": moduleName + \".settings.overlayOrientation.horizontal\",\n                \"vertical\": moduleName + \".settings.overlayOrientation.vertical\"\n            },\n            default: \"horizontal\",\n        });\n\n        game.settings.register(moduleName, \"checkedList\", {\n            scope: \"client\",\n            type: Array,\n            default: [],\n        });\n        game.settings.registerMenu(moduleName, \"actorSelector\", {\n            name: moduleName + \".settings.actorSelector.name\",\n            label: moduleName + \".settings.actorSelector.label\",\n            type: StreamGTCharacterSelector,\n            restricted: false,\n        });\n\n        game.settings.register(moduleName, \"hpPath\", {\n            name: moduleName + \".settings.hpPath.name\",\n            hint: moduleName + \".settings.hpPath.hint\",\n            scope: \"world\",\n            type: String,\n            default: \"data.data.attributes.hp.value\",\n            config: true,\n            restricted: true,\n        });\n\n        game.settings.register(moduleName, \"maxHpPath\", {\n            name: moduleName + \".settings.maxHpPath.name\",\n            hint: moduleName + \".settings.maxHpPath.hint\",\n            scope: \"world\",\n            type: String,\n            default: \"data.data.attributes.hp.max\",\n            config: true,\n            restricted: true,\n        });\n    }\n}","export const moduleName = 'stream-gt';\n\nexport function findTokenById(tokenId) {\n    return canvas.tokens.ownedTokens.find(t => t.id == tokenId);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Settings } from \"./settings\";\nimport { moduleName } from \"./utils\";\n\n/**\n * @description function to render the Holder element for the player objects\n */\nasync function renderHolder() {\n    var template = await getTemplate(\"modules/\" + moduleName + \"/templates/player-holder.html\");\n    $(\"body\").append(template);\n}\n\n/**\n * @description function to add a Player element in the Holder\n */\nasync function renderPlayer() {\n    var template = await getTemplate(\"modules/\" + moduleName + \"/templates/player.html\");\n    $(\"#board\").append(template);\n}\n\nHooks.on(\"init\", function () {\n    Settings.setup();\n});\n\nHooks.on(\"ready\", function () {\n    renderHolder();\n    // game.socket.on(\"module.stream-gt\", (data) => {\n    //   if (data.getData) {\n    //     game.socket.emit(\"module.stream-gt\", { currentScene: canvas.scene, sendData: true });\n    //   }\n    // });\n});"],"sourceRoot":""}